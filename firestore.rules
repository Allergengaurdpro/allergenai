rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isManager() {
      return isAuthenticated() &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager';
    }

    function isReceiver() {
      return isAuthenticated() &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'receiver';
    }

    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isManager();
    }

    match /vendors/{vendorId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isManager();
    }

    match /scanning_sessions/{sessionId} {
      allow read: if isAuthenticated();
      allow create, update: if isReceiver() || isManager();
      allow delete: if isManager();
    }

    match /products/{productId} {
      allow read: if isAuthenticated();
      allow create, update: if isAuthenticated();
      allow delete: if isManager();
    }

    match /inventory/{inventoryId} {
      allow read: if isAuthenticated();
      allow create, update: if isAuthenticated();
      allow delete: if isManager();
    }
  }
}
